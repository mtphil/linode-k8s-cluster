name: deploy_terraform_to_linode
on:   
  push:
    branches:
    - main
  pull_request:
  release:
    actions:
    - published

permissions:
  contents: read

jobs:
  build:
    name: deploy_terraform_to_linode
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: hashicorp/vault-action@v2.4.0
        with:
          url: https://vault-cluster.vault.f7138e83-ed41-4970-8209-2d60a69c6a0f.aws.hashicorp.cloud:8200
          tlsSkipVerify: true
          method: token
          namespace: admin/yoyodynecorp
          token: ${{ secrets.VAULT_API_TOKEN }}
          secrets: |
            secret/data/github_action_linode_terraform LINODE_KUBERNETES_API_TOKEN ;
            secret/data/github_action_linode_terraform CONSUL_API_TOKEN 
      - uses: hashicorp/setup-terraform@v2
      - name: Terraform Init
        run: CONSUL_HTTP_TOKEN=${{ env.CONSUL_API_TOKEN }} terraform init -lock=false
      - name: Terraform Format
        run: terraform fmt -check
      - name: Terraform Plan
        run: CONSUL_HTTP_TOKEN=${{ env.CONSUL_API_TOKEN }} TF_VAR_LINODE_KUBERNETES_API_TOKEN=${{ env.LINODE_KUBERNETES_API_TOKEN }} terraform plan -lock=false -input=false -var-file="terraform.tfvars"
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'release'
        run: CONSUL_HTTP_TOKEN=${{ env.CONSUL_API_TOKEN }} TF_VAR_LINODE_KUBERNETES_API_TOKEN=${{ env.LINODE_KUBERNETES_API_TOKEN }} terraform apply -lock=false -auto-approve -input=false -var-file="terraform.tfvars"